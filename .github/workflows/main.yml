name: Actions

on: [push, pull_request, workflow_dispatch] 

jobs:
  run_test:
    name: Run Tests

    permissions:
      checks: write

    strategy:
      matrix:
        unityVersion:
          - 6000.0.32f1
          - 2023.2.20f1
          - 2022.3.55f1
        os:
          - ubuntu-latest
          # - windows-latest
        projectPath:
          - ./
        testMode:
          - playmode
          # - editmode
    
    runs-on: ${{ matrix.os }}

    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: false

      # Cache Library
      - uses: actions/cache@v4
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-

      # Test
      - name: run tests
        uses: game-ci/unity-test-runner@v4
        id: testRun
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          packageMode: true
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.unityVersion }}-${{ matrix.os }}-${{ matrix.testMode }}-artifacts
          checkName: ${{ matrix.unityVersion }}-${{ matrix.os }}-${{ matrix.testMode }} Test Results
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Upload artifacts
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test results for ${{ matrix.unityVersion }}-${{ matrix.os }}-${{ matrix.testMode }}
          path: ${{ steps.testRun.outputs.artifactsPath }}